version: "3.9"

networks:
  mesh_network:
    name: mesh_network

services:
  front-envoy:
    image: "front-envoy:latest"
    build:
      context: .
      dockerfile: "./docker/front/Dockerfile"
    container_name: front-envoy
    command: /usr/local/bin/envoy --service-cluster front_envoy -c /etc/envoy/envoy.yaml
    ports:
      - "8088:8088"
      - "9088:9088"
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    networks:
      - mesh_network

  back-envoy:
    image: "back-envoy:latest"
    build:
      context: .
      dockerfile: "./docker/back/Dockerfile"
    container_name: back-envoy
    command: /usr/local/bin/envoy --service-cluster back_envoy -c /etc/envoy/envoy.yaml
    ports:
      - "8089:8089"
      - "9089:9089"
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    networks:
      - mesh_network

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: 9411
    ports:
      - "9411:9411"
      - "16686:16686"
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    networks:
      - mesh_network

  node-exporter:
    image: quay.io/prometheus/node-exporter
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    networks:
      - mesh_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    networks:
      - mesh_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_INSTALL_PLUGINS=redis-datasource
    depends_on:
      - influxdb
    volumes:
      - ./data/grafana-storage:/var/lib/grafana
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    networks:
      - mesh_network

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    restart: always
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
    volumes:
      - ./data/influxdb-storage:/var/lib/influxdb
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    networks:
      - mesh_network

  redis:
    build:
      context: .
      dockerfile: ./docker/redis/Dockerfile
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    restart: always
    networks:
      - mesh_network

  k6:
    image: loadimpact/k6:latest
    container_name: k6
    ports:
      - "6565:6565"
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
    volumes:
      - ./loadtest:/scripts
    entrypoint: "tail -f /dev/null"
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    networks:
      - mesh_network

  loki:
    platform: linux/x86_64
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - mesh_network
    # docker run --platform linux/x86_64 -d --name=loki -p 3100:3100 grafana/loki

  promtail:
    image: grafana/promtail:2.2.1
    container_name: promtail
    volumes:
      - ./promtail-config.yaml:/etc/promtail/promtail-config.yaml
    command: -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - mesh_network

  sandbox:
    image: almalinux:latest
    container_name: sandbox
    command: tail -f /dev/null
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    networks:
      - mesh_network
