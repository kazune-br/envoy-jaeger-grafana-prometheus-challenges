version: '3.9'
services:
  front-envoy:
    image: "front-envoy:latest"
    build:
      context: .
      dockerfile: "./docker/front/Dockerfile"
    container_name: front-envoy
    command: /usr/local/bin/envoy --service-cluster front_envoy -c /etc/envoy/envoy.yaml
    ports:
      - "8088:8088"
      - "9088:9088"
    networks:
      mesh_network:

  back-envoy:
    image: "back-envoy:latest"
    build:
      context: .
      dockerfile: "./docker/back/Dockerfile"
    container_name: back-envoy
    command: /usr/local/bin/envoy --service-cluster back_envoy -c /etc/envoy/envoy.yaml
    ports:
      - "8089:8089"
      - "9089:9089"
    networks:
      mesh_network:

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: 9411
    ports:
      - "9411:9411"
      - "16686:16686"
    networks:
      mesh_network:

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      mesh_network:

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - influxdb
    volumes:
      - ./data/grafana-storage:/var/lib/grafana
    networks:
      mesh_network:

  influxdb:
    image: influxdb
    restart: always
    ports:
      - "8086:8086"
    volumes:
      - ./data/influxdb-storage:/var/lib/influxdb

  node-exporter:
    image: quay.io/prometheus/node-exporter
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
    networks:
      mesh_network:

networks:
  mesh_network:
    name: mesh_network
